{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/cook.md","hash":"c92a8a3a9b1a1c880996d13fa7fdbd99b4452717","modified":1657160576675},{"_id":"source/_posts/hello-world.md","hash":"6d92e73079690f4d0a0f545008563ed95d9f2b3b","modified":1657107120648},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1657016623547},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1657016623787},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1657016624131},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1657016623786},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1657016624132},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1657016624134},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1657016624133},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1657016624135},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1657016624134},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1657016624136},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1657016624136},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1657016624137},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1657016624137},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1657016624138},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1657016624139},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1657016624140},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1657016624140},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1657016624142},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1657016624141},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1657016624142},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1657016623573},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1657016623606},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1657016623587},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1657016623608},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1657016623612},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1657016623611},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1657016623617},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1657016623773},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1657016623552},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1657016623553},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1657016623557},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1657016623593},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1657016623575},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1657016623599},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1657016623600},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1657016623608},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1657016623602},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1657016623603},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1657016623613},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1657016623569},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1657016623613},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1657016623585},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1657016623615},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1657016623618},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1657016623550},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1657016623941},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1657016623942},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1657016623957},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1657016623782},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1657016623581},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1657016623592},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1657016623594},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1657016623614},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1657016623619},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1657016623609},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1657016623944},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1657016623946},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1657016623946},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1657016623952},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1657016623955},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1657016623953},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1657016623954},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1657016623950},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1657016623955},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1657016623956},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1657016623951},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1657016623954},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1657016623780},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1657016623777},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1657016624005},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1657016624130},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1657016623940},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1657016623632},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1657016623983},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1657016623770},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1657016623971},{"_id":"public/2022/07/06/hello-world/index.html","hash":"9e6eae7ad93affcd9de1be79544fceca414bbfd3","modified":1657160586625},{"_id":"public/archives/index.html","hash":"1ae2dbcccbc5c8ff880165b1ea4fe931b6ff6f51","modified":1657160586625},{"_id":"public/archives/2022/07/index.html","hash":"d435edfb258655b103a91e6b4aa6a4aad0018151","modified":1657160586625},{"_id":"public/2022/07/07/cook/index.html","hash":"eaf57931b6d09ba7d05d4f9ccc30dd265df2d10e","modified":1657160586625},{"_id":"public/archives/2022/index.html","hash":"1a5b5a3c6e1401affeb0fbf8c295bf7a11fe9ee6","modified":1657160586625},{"_id":"public/index.html","hash":"0f479426062f6cb0230d0583ba332a932cc3d35b","modified":1657160586625},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1657160586625},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1657160586625},{"_id":"public/css/style.css","hash":"4da345d832a2682bcaee3ab3e22c15e3cd0e9cde","modified":1657160586625},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1657160586625},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1657160586625},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1657160586625},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1657160586625},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1657160586625},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1657160586625},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1657160586625},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1657160586625},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1657160586625}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"cook","date":"2022-07-07T02:21:37.000Z","_content":"# cookie\n\n## 什么是Cookie\n\n\nCookie又叫会话跟踪技术，实际上就是客户端硬盘上的一个文本文件，该文件用来存储一些数据。\n\ncookie 是浏览器 为了 标识用户身份  或者 长时间存储一些信息  而保存在用户本地的数据(其本质是 为了提升用户体验  而存储来用户本地的数据)\n\n**Cookie和变量一样，是用来做数据存储的**\n\n与变量不同之处在于，cookie能够有前提性的，实现跨页面读写数据，和长时间保存数据。\n\n前提性：\n\n- 必须是同一个浏览器创建的cookie \n- 必须是同一个网站创建的cookie\n- 通过设置path属性所具备的读写权限\n- 通过设置expires属性所具备的有效时间权限  \n\n特征:\n\n- cookie 的存取都依赖于 document.cookie   (类型  字符串类型)\n- cookie 存储的时候是一条一条的的存的\n- cookie 可以设置存储路径  和  过期时间(默认浏览器关闭 过期)\n\n\n## 如何操作Cookie（重点）\n\n**Cookie需要依赖服务器环境，所以应先搭建服务器环境。**\n\n1. 创建cookie的语法：\n\n  a. cookie 的存取都依赖于 document.cookie \n\n  b. cookie是以键值对(key=value)形式存在的字符串\n\n  c. cookie 存储的时候是一条一条的的存的 (每条数据之前用\"; \" 分隔)\n\n```\ndocument.cookie = \"名称=值\";\n```\n\n2.获取cookie的语法：\n\n  a. cookie 的获取也依赖于 document.cookie\n\n  b. 获取cookie数据时需要进行数据分割(字符串拆分)\n\n```\ndocument.cookie;\n```\n\n3. cookie的修改\n\na.  cookie修改 是根据键名(key) 修改对应的值(重新根据键名赋值即可)\n\n```\ndocument.cookie = \"user=hello cookie\";\n```\n\n4 . cookie的删除和过期时间有关\n\n  a. 默认情况下 如果不设置过期时间 浏览器关闭后 cookie过期\n\n  b. 如果设置了过期时间 等到时间到期之后 cookie就消失了\n\n  c. 删除cookie其实本质就是 将过期时间修改为 过去的时间\n\n```\n \tvar date = new Date();\n    date.setDate(date.getDate() - 1);// 一天前过期\n    document.cookie = \"user=helloCookie;expires=\" + date.toUTCString();\n    document.cookie = \"pwd=123123;expires=\" + date.toUTCString()\n```\n\n\n\n## Cookie的常用属性（重点）\n\n### 过期时间：expires\n\n没有设置expires属性，那么表示该cookie的有效期为会话，会话指浏览器打开到关闭。\n\n设置了expires属性，那么表示该cookie的有效期为一个具体的时间，过期cookie文件删除。\n\n示例：\t\n\n```\nvar d = new Date();\nd.setDate( d.getDate()+1 );\ndocument.cookie = \"username=zhangsan; expires=\"+d.toUTCString(); \t\n```\n\n解读：\n\n创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，它的过期时间是创建这个cookie时的1天后。\n\t\n备注：\n\n通过修改相同命名的cookie的值或过期时间，可以实现该cookie的修改和删除。\n\n\n### 路径：path\n\ncookie在读取时，是存在访问权限的，即只能够访问path路径下的cookie\n\n例如，在网站根目录创建的cookie，网站任何位置都能够访问到这个cookie\n\n在 /a/ 目录下创建的cookie，只能在 /a/ 目录下访问这个cookie。\n\n示例：\n\n```\ndocument.cookie = \"username=zhangsan; path=/\";\n```\n\n解读：\n\n创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，该cookie在当前网站下任何位置都能读写。\n\n备注：\n\npath和domain属性都是设置该cookie的归属，即cookie作用域，因同源策略的限制，只能够获取同源同作用域下的cookie。\n\n\n## 使用Cookie时需要注意\n\n- 有些浏览器在使用中文时，会出现乱码。\n\n> 在设置cookie时，通过encodeURIComponent 编码，在获取cookie时，通过decodeURIComponent 解码\n\n- cookie 文件存放在客户端\n\n> cookie 即可以用客户端 javascript 读写，也可以用服务器端 php、jsp等读写。\n\n- 每个网站只能访问自己网站的cookie\n\n> 即百度创建的cookie，新浪是不能够访问的。\n\n- 每个浏览器只能访问自己浏览器的cookie\n\n> 即火狐创建的cookie，谷歌是不能够访问的。\n\n- cookie 的内容是纯文本，即只能保存字符串数据。\n\n- cookie 依赖于服务器环境 ，即设置和获取cookie时，要用 http 访问网页。火狐除外。\n\n## 浏览器Cookie数量及大小限制\n\n### 浏览器允许每个域名所包含的cookie数\n\n- Microsoft指出InternetExplorer8增加cookie限制为每个域名50个，但实际上IE6就已经最多允许每个域名50个cookie。\n\n- Firefox每个域名cookie限制为50个。firefox 3.6可以存150个cookie。\n\n- Opera每个域名cookie限制为30个。\n\n- Safari / WebKit没有cookie限制。但是如果cookie很多，则会使header大小超过服务器的处理的限制，会导致错误发生。\n\n\n### cookie的缺点\n\ncookie的缺点主要集中于安全性和隐私保护\n\n1.  cookie可能被禁用\n2.  cookie不能跨浏览器 / 不能跨网站\n3.  cookie可能被删除\n4.  cookie安全性不够高\n5.  在浏览器向服务器发送请求时  cookie会随着请求(请求可以携带一定的数据)一同发送给服务器, 会影响请求和响应的速率  \n6.  cookie 存储大小之后 4k ,  cookie的存储条数 一般为50条\n\n\n\n# webStorage(拓展)\n\n## 什么是WebStorage?\n\nWebStorage的目的是克服由cookie所带来的一些限制，当数据需要被严格控制在客户端时，不需要持续的将数据发回服务器。\n\n## WebStorage两个主要目标：\n\n1.提供一种在cookie之外存储会话数据的路径  (一种新的在用户本地 存储数据的方式)\n2.提供一种存储大量可以跨会话存在的数据的机制  (webStorage也可以跨页面访问 )\nHTML5的WebStorage提供了两种API：localStorage（本地存储）和sessionStorage（会话存储）\n\n### localStorage和sessionStorage的区别 和 共同点\n\n1.生命周期\n\n```\nlocalStorage的生命周期是永久的，关闭页面或浏览器之后localStorage中的数据也不会消失。\nlocalStorage除非主动删除数据，否则数据永远不会消失。\nsessionStorage的生命周期是仅在当前会话下有效,关闭会话窗口就失效了。 (同网站,同窗口)\nsessionStorage引入了一个“浏览器窗口会话”的概念，sessionStorage是在同源(同一个域名下)的窗口中始终存在的数据。\n只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录/相同的网站)另一个页面，数据依然存在。\n但是sessionStorage在关闭了浏览器窗口后就会被销毁。同时独立的打开新的窗口但是同一个页面，sessionStorage也是不一样的。\n```\n\n2.存储大小\n\nlocalStorage和sessionStorage的存储数据大小一般都是：5MB\n\n3.存储位置\n\nlocalStorage和sessionStorage都保存在客户端(项目的根目录)，不与后端进行交互通信 (根目录)\n\n4.存储内容类型\n\nlocalStorage和sessionStorage只能存储字符串类型，对于复杂的对象可以使用ECMAScript提供的JSON对象的stringify和parse来处理\n\n5.获取方式 \n\nlocalStorage：window.localStorage\nsessionStorage：window.sessionStorage\n\n6.应用场景\n\nlocalStorage：常用于长期登录（+判断用户是否已登录），适合长期保存在本地的数据\nsessionStorage：敏感账号一次性登录\n\n### WebStorage的优点(对比cookie)\n\n（1）存储空间更大：cookie为4KB，而WebStorage是5MB\n\n（2）节省网络流量：WebStorage不会传送到服务器，存储在本地的数据可以直接获取，也不会像cookie一样每次请求都会传送到服务器，所以减少了客户端和服务端的交互，节省了网络流量\n\n（3）对于那种只需要在用户浏览一组页面期间保存而关闭浏览器后就可以丢弃的数据，sessionStorage会非常方便\n\n（4）快速显示：有的数据存储在WebStorage上再加上浏览器本身的缓存。获取数据时可以从本地获取会比从服务器端获取快得多，所以速度更快\n\n（5）安全性：WebStorage不会随着HTTP header发送到服务器端，所以安全性相对于cookie来说会比较高一些，不会担心截获，但是仍然存在伪造问题\n\n（6）WebStorage提供了一些方法，数据操作比cookie方便\n\n```\n    length   保存数据的数量\n\tsetItem(key, value) —— 保存数据，以键值对的方式存储信息\n\tgetItem(key) —— 获取数据，将键值传入，即可获取到对应的value值\n\tremoveItem(key) —— 删除单个数据，根据键值移除对应的信息\n\tclear() —— 删除所有的数据\n\tkey(index) —— 获取某个索引的key\n```\n\n###  cookie和localStorage sessionStorage\n\ncookie localStorage sessionStorage的区别\n\n| 对比       |                            cookie                            |                         localstorage                         | sessionStorage                                               |\n| ---------- | :----------------------------------------------------------: | :----------------------------------------------------------: | ------------------------------------------------------------ |\n| 获取方式   |                       document.cookie                        |                     window.localStorage                      | window.sessionStorage                                        |\n| 数据类型   |                     cookie的本质是字符串                     |                             对象                             | 对象                                                         |\n| 存储大小   |                              4K                              |                              5M                              | 5M                                                           |\n| 存储位置   |       cookie默认存在当前文件所在的目录,也可以指定目录        |                            根目录                            | 根目录                                                       |\n| 生命周期   | cookie默认浏览器关闭时就过期,设置过期时间之后,等到指定日期之后过期 |      localStorage除非主动删除数据，否则数据永远不会消失      | session 引入了一个“浏览器窗口”的概念,只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录下)另一个页面，数据依然存在 |\n| 服务器请求 | cookie会随着请求传递到服务器,优点:携带数据 缺点:无用数据太多的话影响请求和响应的速度 |          只存在客户端,不与服务器(后端)进行交互通信           | 只存在客户端,不与服务器(后端)进行交互通信                    |\n| 应用场景   | 1.标识用户身份                              2.长时间存储一些数据 | 常用于长期登录（+判断用户是否已登录token），适合长期保存在本地的数据 | 敏感账号一次性登录                                           |","source":"_posts/cook.md","raw":"---\ntitle: cook\ndate: 2022-07-07 10:21:37\ntags: \n---\n# cookie\n\n## 什么是Cookie\n\n\nCookie又叫会话跟踪技术，实际上就是客户端硬盘上的一个文本文件，该文件用来存储一些数据。\n\ncookie 是浏览器 为了 标识用户身份  或者 长时间存储一些信息  而保存在用户本地的数据(其本质是 为了提升用户体验  而存储来用户本地的数据)\n\n**Cookie和变量一样，是用来做数据存储的**\n\n与变量不同之处在于，cookie能够有前提性的，实现跨页面读写数据，和长时间保存数据。\n\n前提性：\n\n- 必须是同一个浏览器创建的cookie \n- 必须是同一个网站创建的cookie\n- 通过设置path属性所具备的读写权限\n- 通过设置expires属性所具备的有效时间权限  \n\n特征:\n\n- cookie 的存取都依赖于 document.cookie   (类型  字符串类型)\n- cookie 存储的时候是一条一条的的存的\n- cookie 可以设置存储路径  和  过期时间(默认浏览器关闭 过期)\n\n\n## 如何操作Cookie（重点）\n\n**Cookie需要依赖服务器环境，所以应先搭建服务器环境。**\n\n1. 创建cookie的语法：\n\n  a. cookie 的存取都依赖于 document.cookie \n\n  b. cookie是以键值对(key=value)形式存在的字符串\n\n  c. cookie 存储的时候是一条一条的的存的 (每条数据之前用\"; \" 分隔)\n\n```\ndocument.cookie = \"名称=值\";\n```\n\n2.获取cookie的语法：\n\n  a. cookie 的获取也依赖于 document.cookie\n\n  b. 获取cookie数据时需要进行数据分割(字符串拆分)\n\n```\ndocument.cookie;\n```\n\n3. cookie的修改\n\na.  cookie修改 是根据键名(key) 修改对应的值(重新根据键名赋值即可)\n\n```\ndocument.cookie = \"user=hello cookie\";\n```\n\n4 . cookie的删除和过期时间有关\n\n  a. 默认情况下 如果不设置过期时间 浏览器关闭后 cookie过期\n\n  b. 如果设置了过期时间 等到时间到期之后 cookie就消失了\n\n  c. 删除cookie其实本质就是 将过期时间修改为 过去的时间\n\n```\n \tvar date = new Date();\n    date.setDate(date.getDate() - 1);// 一天前过期\n    document.cookie = \"user=helloCookie;expires=\" + date.toUTCString();\n    document.cookie = \"pwd=123123;expires=\" + date.toUTCString()\n```\n\n\n\n## Cookie的常用属性（重点）\n\n### 过期时间：expires\n\n没有设置expires属性，那么表示该cookie的有效期为会话，会话指浏览器打开到关闭。\n\n设置了expires属性，那么表示该cookie的有效期为一个具体的时间，过期cookie文件删除。\n\n示例：\t\n\n```\nvar d = new Date();\nd.setDate( d.getDate()+1 );\ndocument.cookie = \"username=zhangsan; expires=\"+d.toUTCString(); \t\n```\n\n解读：\n\n创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，它的过期时间是创建这个cookie时的1天后。\n\t\n备注：\n\n通过修改相同命名的cookie的值或过期时间，可以实现该cookie的修改和删除。\n\n\n### 路径：path\n\ncookie在读取时，是存在访问权限的，即只能够访问path路径下的cookie\n\n例如，在网站根目录创建的cookie，网站任何位置都能够访问到这个cookie\n\n在 /a/ 目录下创建的cookie，只能在 /a/ 目录下访问这个cookie。\n\n示例：\n\n```\ndocument.cookie = \"username=zhangsan; path=/\";\n```\n\n解读：\n\n创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，该cookie在当前网站下任何位置都能读写。\n\n备注：\n\npath和domain属性都是设置该cookie的归属，即cookie作用域，因同源策略的限制，只能够获取同源同作用域下的cookie。\n\n\n## 使用Cookie时需要注意\n\n- 有些浏览器在使用中文时，会出现乱码。\n\n> 在设置cookie时，通过encodeURIComponent 编码，在获取cookie时，通过decodeURIComponent 解码\n\n- cookie 文件存放在客户端\n\n> cookie 即可以用客户端 javascript 读写，也可以用服务器端 php、jsp等读写。\n\n- 每个网站只能访问自己网站的cookie\n\n> 即百度创建的cookie，新浪是不能够访问的。\n\n- 每个浏览器只能访问自己浏览器的cookie\n\n> 即火狐创建的cookie，谷歌是不能够访问的。\n\n- cookie 的内容是纯文本，即只能保存字符串数据。\n\n- cookie 依赖于服务器环境 ，即设置和获取cookie时，要用 http 访问网页。火狐除外。\n\n## 浏览器Cookie数量及大小限制\n\n### 浏览器允许每个域名所包含的cookie数\n\n- Microsoft指出InternetExplorer8增加cookie限制为每个域名50个，但实际上IE6就已经最多允许每个域名50个cookie。\n\n- Firefox每个域名cookie限制为50个。firefox 3.6可以存150个cookie。\n\n- Opera每个域名cookie限制为30个。\n\n- Safari / WebKit没有cookie限制。但是如果cookie很多，则会使header大小超过服务器的处理的限制，会导致错误发生。\n\n\n### cookie的缺点\n\ncookie的缺点主要集中于安全性和隐私保护\n\n1.  cookie可能被禁用\n2.  cookie不能跨浏览器 / 不能跨网站\n3.  cookie可能被删除\n4.  cookie安全性不够高\n5.  在浏览器向服务器发送请求时  cookie会随着请求(请求可以携带一定的数据)一同发送给服务器, 会影响请求和响应的速率  \n6.  cookie 存储大小之后 4k ,  cookie的存储条数 一般为50条\n\n\n\n# webStorage(拓展)\n\n## 什么是WebStorage?\n\nWebStorage的目的是克服由cookie所带来的一些限制，当数据需要被严格控制在客户端时，不需要持续的将数据发回服务器。\n\n## WebStorage两个主要目标：\n\n1.提供一种在cookie之外存储会话数据的路径  (一种新的在用户本地 存储数据的方式)\n2.提供一种存储大量可以跨会话存在的数据的机制  (webStorage也可以跨页面访问 )\nHTML5的WebStorage提供了两种API：localStorage（本地存储）和sessionStorage（会话存储）\n\n### localStorage和sessionStorage的区别 和 共同点\n\n1.生命周期\n\n```\nlocalStorage的生命周期是永久的，关闭页面或浏览器之后localStorage中的数据也不会消失。\nlocalStorage除非主动删除数据，否则数据永远不会消失。\nsessionStorage的生命周期是仅在当前会话下有效,关闭会话窗口就失效了。 (同网站,同窗口)\nsessionStorage引入了一个“浏览器窗口会话”的概念，sessionStorage是在同源(同一个域名下)的窗口中始终存在的数据。\n只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录/相同的网站)另一个页面，数据依然存在。\n但是sessionStorage在关闭了浏览器窗口后就会被销毁。同时独立的打开新的窗口但是同一个页面，sessionStorage也是不一样的。\n```\n\n2.存储大小\n\nlocalStorage和sessionStorage的存储数据大小一般都是：5MB\n\n3.存储位置\n\nlocalStorage和sessionStorage都保存在客户端(项目的根目录)，不与后端进行交互通信 (根目录)\n\n4.存储内容类型\n\nlocalStorage和sessionStorage只能存储字符串类型，对于复杂的对象可以使用ECMAScript提供的JSON对象的stringify和parse来处理\n\n5.获取方式 \n\nlocalStorage：window.localStorage\nsessionStorage：window.sessionStorage\n\n6.应用场景\n\nlocalStorage：常用于长期登录（+判断用户是否已登录），适合长期保存在本地的数据\nsessionStorage：敏感账号一次性登录\n\n### WebStorage的优点(对比cookie)\n\n（1）存储空间更大：cookie为4KB，而WebStorage是5MB\n\n（2）节省网络流量：WebStorage不会传送到服务器，存储在本地的数据可以直接获取，也不会像cookie一样每次请求都会传送到服务器，所以减少了客户端和服务端的交互，节省了网络流量\n\n（3）对于那种只需要在用户浏览一组页面期间保存而关闭浏览器后就可以丢弃的数据，sessionStorage会非常方便\n\n（4）快速显示：有的数据存储在WebStorage上再加上浏览器本身的缓存。获取数据时可以从本地获取会比从服务器端获取快得多，所以速度更快\n\n（5）安全性：WebStorage不会随着HTTP header发送到服务器端，所以安全性相对于cookie来说会比较高一些，不会担心截获，但是仍然存在伪造问题\n\n（6）WebStorage提供了一些方法，数据操作比cookie方便\n\n```\n    length   保存数据的数量\n\tsetItem(key, value) —— 保存数据，以键值对的方式存储信息\n\tgetItem(key) —— 获取数据，将键值传入，即可获取到对应的value值\n\tremoveItem(key) —— 删除单个数据，根据键值移除对应的信息\n\tclear() —— 删除所有的数据\n\tkey(index) —— 获取某个索引的key\n```\n\n###  cookie和localStorage sessionStorage\n\ncookie localStorage sessionStorage的区别\n\n| 对比       |                            cookie                            |                         localstorage                         | sessionStorage                                               |\n| ---------- | :----------------------------------------------------------: | :----------------------------------------------------------: | ------------------------------------------------------------ |\n| 获取方式   |                       document.cookie                        |                     window.localStorage                      | window.sessionStorage                                        |\n| 数据类型   |                     cookie的本质是字符串                     |                             对象                             | 对象                                                         |\n| 存储大小   |                              4K                              |                              5M                              | 5M                                                           |\n| 存储位置   |       cookie默认存在当前文件所在的目录,也可以指定目录        |                            根目录                            | 根目录                                                       |\n| 生命周期   | cookie默认浏览器关闭时就过期,设置过期时间之后,等到指定日期之后过期 |      localStorage除非主动删除数据，否则数据永远不会消失      | session 引入了一个“浏览器窗口”的概念,只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录下)另一个页面，数据依然存在 |\n| 服务器请求 | cookie会随着请求传递到服务器,优点:携带数据 缺点:无用数据太多的话影响请求和响应的速度 |          只存在客户端,不与服务器(后端)进行交互通信           | 只存在客户端,不与服务器(后端)进行交互通信                    |\n| 应用场景   | 1.标识用户身份                              2.长时间存储一些数据 | 常用于长期登录（+判断用户是否已登录token），适合长期保存在本地的数据 | 敏感账号一次性登录                                           |","slug":"cook","published":1,"updated":"2022-07-07T02:22:56.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5aemkdp0000jsu3aqibh7nd","content":"<h1 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h1><h2 id=\"什么是Cookie\"><a href=\"#什么是Cookie\" class=\"headerlink\" title=\"什么是Cookie\"></a>什么是Cookie</h2><p>Cookie又叫会话跟踪技术，实际上就是客户端硬盘上的一个文本文件，该文件用来存储一些数据。</p>\n<p>cookie 是浏览器 为了 标识用户身份  或者 长时间存储一些信息  而保存在用户本地的数据(其本质是 为了提升用户体验  而存储来用户本地的数据)</p>\n<p><strong>Cookie和变量一样，是用来做数据存储的</strong></p>\n<p>与变量不同之处在于，cookie能够有前提性的，实现跨页面读写数据，和长时间保存数据。</p>\n<p>前提性：</p>\n<ul>\n<li>必须是同一个浏览器创建的cookie </li>\n<li>必须是同一个网站创建的cookie</li>\n<li>通过设置path属性所具备的读写权限</li>\n<li>通过设置expires属性所具备的有效时间权限</li>\n</ul>\n<p>特征:</p>\n<ul>\n<li>cookie 的存取都依赖于 document.cookie   (类型  字符串类型)</li>\n<li>cookie 存储的时候是一条一条的的存的</li>\n<li>cookie 可以设置存储路径  和  过期时间(默认浏览器关闭 过期)</li>\n</ul>\n<h2 id=\"如何操作Cookie（重点）\"><a href=\"#如何操作Cookie（重点）\" class=\"headerlink\" title=\"如何操作Cookie（重点）\"></a>如何操作Cookie（重点）</h2><p><strong>Cookie需要依赖服务器环境，所以应先搭建服务器环境。</strong></p>\n<ol>\n<li>创建cookie的语法：</li>\n</ol>\n<p>  a. cookie 的存取都依赖于 document.cookie </p>\n<p>  b. cookie是以键值对(key&#x3D;value)形式存在的字符串</p>\n<p>  c. cookie 存储的时候是一条一条的的存的 (每条数据之前用”; “ 分隔)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;名称=值&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>2.获取cookie的语法：</p>\n<p>  a. cookie 的获取也依赖于 document.cookie</p>\n<p>  b. 获取cookie数据时需要进行数据分割(字符串拆分)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>cookie的修改</li>\n</ol>\n<p>a.  cookie修改 是根据键名(key) 修改对应的值(重新根据键名赋值即可)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;user=hello cookie&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>4 . cookie的删除和过期时间有关</p>\n<p>  a. 默认情况下 如果不设置过期时间 浏览器关闭后 cookie过期</p>\n<p>  b. 如果设置了过期时间 等到时间到期之后 cookie就消失了</p>\n<p>  c. 删除cookie其实本质就是 将过期时间修改为 过去的时间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var date = new Date();</span><br><span class=\"line\">  date.setDate(date.getDate() - 1);// 一天前过期</span><br><span class=\"line\">  document.cookie = &quot;user=helloCookie;expires=&quot; + date.toUTCString();</span><br><span class=\"line\">  document.cookie = &quot;pwd=123123;expires=&quot; + date.toUTCString()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Cookie的常用属性（重点）\"><a href=\"#Cookie的常用属性（重点）\" class=\"headerlink\" title=\"Cookie的常用属性（重点）\"></a>Cookie的常用属性（重点）</h2><h3 id=\"过期时间：expires\"><a href=\"#过期时间：expires\" class=\"headerlink\" title=\"过期时间：expires\"></a>过期时间：expires</h3><p>没有设置expires属性，那么表示该cookie的有效期为会话，会话指浏览器打开到关闭。</p>\n<p>设置了expires属性，那么表示该cookie的有效期为一个具体的时间，过期cookie文件删除。</p>\n<p>示例：\t</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var d = new Date();</span><br><span class=\"line\">d.setDate( d.getDate()+1 );</span><br><span class=\"line\">document.cookie = &quot;username=zhangsan; expires=&quot;+d.toUTCString(); \t</span><br></pre></td></tr></table></figure>\n\n<p>解读：</p>\n<p>创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，它的过期时间是创建这个cookie时的1天后。</p>\n<p>备注：</p>\n<p>通过修改相同命名的cookie的值或过期时间，可以实现该cookie的修改和删除。</p>\n<h3 id=\"路径：path\"><a href=\"#路径：path\" class=\"headerlink\" title=\"路径：path\"></a>路径：path</h3><p>cookie在读取时，是存在访问权限的，即只能够访问path路径下的cookie</p>\n<p>例如，在网站根目录创建的cookie，网站任何位置都能够访问到这个cookie</p>\n<p>在 &#x2F;a&#x2F; 目录下创建的cookie，只能在 &#x2F;a&#x2F; 目录下访问这个cookie。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;username=zhangsan; path=/&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>解读：</p>\n<p>创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，该cookie在当前网站下任何位置都能读写。</p>\n<p>备注：</p>\n<p>path和domain属性都是设置该cookie的归属，即cookie作用域，因同源策略的限制，只能够获取同源同作用域下的cookie。</p>\n<h2 id=\"使用Cookie时需要注意\"><a href=\"#使用Cookie时需要注意\" class=\"headerlink\" title=\"使用Cookie时需要注意\"></a>使用Cookie时需要注意</h2><ul>\n<li>有些浏览器在使用中文时，会出现乱码。</li>\n</ul>\n<blockquote>\n<p>在设置cookie时，通过encodeURIComponent 编码，在获取cookie时，通过decodeURIComponent 解码</p>\n</blockquote>\n<ul>\n<li>cookie 文件存放在客户端</li>\n</ul>\n<blockquote>\n<p>cookie 即可以用客户端 javascript 读写，也可以用服务器端 php、jsp等读写。</p>\n</blockquote>\n<ul>\n<li>每个网站只能访问自己网站的cookie</li>\n</ul>\n<blockquote>\n<p>即百度创建的cookie，新浪是不能够访问的。</p>\n</blockquote>\n<ul>\n<li>每个浏览器只能访问自己浏览器的cookie</li>\n</ul>\n<blockquote>\n<p>即火狐创建的cookie，谷歌是不能够访问的。</p>\n</blockquote>\n<ul>\n<li><p>cookie 的内容是纯文本，即只能保存字符串数据。</p>\n</li>\n<li><p>cookie 依赖于服务器环境 ，即设置和获取cookie时，要用 http 访问网页。火狐除外。</p>\n</li>\n</ul>\n<h2 id=\"浏览器Cookie数量及大小限制\"><a href=\"#浏览器Cookie数量及大小限制\" class=\"headerlink\" title=\"浏览器Cookie数量及大小限制\"></a>浏览器Cookie数量及大小限制</h2><h3 id=\"浏览器允许每个域名所包含的cookie数\"><a href=\"#浏览器允许每个域名所包含的cookie数\" class=\"headerlink\" title=\"浏览器允许每个域名所包含的cookie数\"></a>浏览器允许每个域名所包含的cookie数</h3><ul>\n<li><p>Microsoft指出InternetExplorer8增加cookie限制为每个域名50个，但实际上IE6就已经最多允许每个域名50个cookie。</p>\n</li>\n<li><p>Firefox每个域名cookie限制为50个。firefox 3.6可以存150个cookie。</p>\n</li>\n<li><p>Opera每个域名cookie限制为30个。</p>\n</li>\n<li><p>Safari &#x2F; WebKit没有cookie限制。但是如果cookie很多，则会使header大小超过服务器的处理的限制，会导致错误发生。</p>\n</li>\n</ul>\n<h3 id=\"cookie的缺点\"><a href=\"#cookie的缺点\" class=\"headerlink\" title=\"cookie的缺点\"></a>cookie的缺点</h3><p>cookie的缺点主要集中于安全性和隐私保护</p>\n<ol>\n<li>cookie可能被禁用</li>\n<li>cookie不能跨浏览器 &#x2F; 不能跨网站</li>\n<li>cookie可能被删除</li>\n<li>cookie安全性不够高</li>\n<li>在浏览器向服务器发送请求时  cookie会随着请求(请求可以携带一定的数据)一同发送给服务器, 会影响请求和响应的速率  </li>\n<li>cookie 存储大小之后 4k ,  cookie的存储条数 一般为50条</li>\n</ol>\n<h1 id=\"webStorage-拓展\"><a href=\"#webStorage-拓展\" class=\"headerlink\" title=\"webStorage(拓展)\"></a>webStorage(拓展)</h1><h2 id=\"什么是WebStorage\"><a href=\"#什么是WebStorage\" class=\"headerlink\" title=\"什么是WebStorage?\"></a>什么是WebStorage?</h2><p>WebStorage的目的是克服由cookie所带来的一些限制，当数据需要被严格控制在客户端时，不需要持续的将数据发回服务器。</p>\n<h2 id=\"WebStorage两个主要目标：\"><a href=\"#WebStorage两个主要目标：\" class=\"headerlink\" title=\"WebStorage两个主要目标：\"></a>WebStorage两个主要目标：</h2><p>1.提供一种在cookie之外存储会话数据的路径  (一种新的在用户本地 存储数据的方式)<br>2.提供一种存储大量可以跨会话存在的数据的机制  (webStorage也可以跨页面访问 )<br>HTML5的WebStorage提供了两种API：localStorage（本地存储）和sessionStorage（会话存储）</p>\n<h3 id=\"localStorage和sessionStorage的区别-和-共同点\"><a href=\"#localStorage和sessionStorage的区别-和-共同点\" class=\"headerlink\" title=\"localStorage和sessionStorage的区别 和 共同点\"></a>localStorage和sessionStorage的区别 和 共同点</h3><p>1.生命周期</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage的生命周期是永久的，关闭页面或浏览器之后localStorage中的数据也不会消失。</span><br><span class=\"line\">localStorage除非主动删除数据，否则数据永远不会消失。</span><br><span class=\"line\">sessionStorage的生命周期是仅在当前会话下有效,关闭会话窗口就失效了。 (同网站,同窗口)</span><br><span class=\"line\">sessionStorage引入了一个“浏览器窗口会话”的概念，sessionStorage是在同源(同一个域名下)的窗口中始终存在的数据。</span><br><span class=\"line\">只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录/相同的网站)另一个页面，数据依然存在。</span><br><span class=\"line\">但是sessionStorage在关闭了浏览器窗口后就会被销毁。同时独立的打开新的窗口但是同一个页面，sessionStorage也是不一样的。</span><br></pre></td></tr></table></figure>\n\n<p>2.存储大小</p>\n<p>localStorage和sessionStorage的存储数据大小一般都是：5MB</p>\n<p>3.存储位置</p>\n<p>localStorage和sessionStorage都保存在客户端(项目的根目录)，不与后端进行交互通信 (根目录)</p>\n<p>4.存储内容类型</p>\n<p>localStorage和sessionStorage只能存储字符串类型，对于复杂的对象可以使用ECMAScript提供的JSON对象的stringify和parse来处理</p>\n<p>5.获取方式 </p>\n<p>localStorage：window.localStorage<br>sessionStorage：window.sessionStorage</p>\n<p>6.应用场景</p>\n<p>localStorage：常用于长期登录（+判断用户是否已登录），适合长期保存在本地的数据<br>sessionStorage：敏感账号一次性登录</p>\n<h3 id=\"WebStorage的优点-对比cookie\"><a href=\"#WebStorage的优点-对比cookie\" class=\"headerlink\" title=\"WebStorage的优点(对比cookie)\"></a>WebStorage的优点(对比cookie)</h3><p>（1）存储空间更大：cookie为4KB，而WebStorage是5MB</p>\n<p>（2）节省网络流量：WebStorage不会传送到服务器，存储在本地的数据可以直接获取，也不会像cookie一样每次请求都会传送到服务器，所以减少了客户端和服务端的交互，节省了网络流量</p>\n<p>（3）对于那种只需要在用户浏览一组页面期间保存而关闭浏览器后就可以丢弃的数据，sessionStorage会非常方便</p>\n<p>（4）快速显示：有的数据存储在WebStorage上再加上浏览器本身的缓存。获取数据时可以从本地获取会比从服务器端获取快得多，所以速度更快</p>\n<p>（5）安全性：WebStorage不会随着HTTP header发送到服务器端，所以安全性相对于cookie来说会比较高一些，不会担心截获，但是仍然存在伪造问题</p>\n<p>（6）WebStorage提供了一些方法，数据操作比cookie方便</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   length   保存数据的数量</span><br><span class=\"line\">setItem(key, value) —— 保存数据，以键值对的方式存储信息</span><br><span class=\"line\">getItem(key) —— 获取数据，将键值传入，即可获取到对应的value值</span><br><span class=\"line\">removeItem(key) —— 删除单个数据，根据键值移除对应的信息</span><br><span class=\"line\">clear() —— 删除所有的数据</span><br><span class=\"line\">key(index) —— 获取某个索引的key</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cookie和localStorage-sessionStorage\"><a href=\"#cookie和localStorage-sessionStorage\" class=\"headerlink\" title=\"cookie和localStorage sessionStorage\"></a>cookie和localStorage sessionStorage</h3><p>cookie localStorage sessionStorage的区别</p>\n<table>\n<thead>\n<tr>\n<th>对比</th>\n<th align=\"center\">cookie</th>\n<th align=\"center\">localstorage</th>\n<th>sessionStorage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>获取方式</td>\n<td align=\"center\">document.cookie</td>\n<td align=\"center\">window.localStorage</td>\n<td>window.sessionStorage</td>\n</tr>\n<tr>\n<td>数据类型</td>\n<td align=\"center\">cookie的本质是字符串</td>\n<td align=\"center\">对象</td>\n<td>对象</td>\n</tr>\n<tr>\n<td>存储大小</td>\n<td align=\"center\">4K</td>\n<td align=\"center\">5M</td>\n<td>5M</td>\n</tr>\n<tr>\n<td>存储位置</td>\n<td align=\"center\">cookie默认存在当前文件所在的目录,也可以指定目录</td>\n<td align=\"center\">根目录</td>\n<td>根目录</td>\n</tr>\n<tr>\n<td>生命周期</td>\n<td align=\"center\">cookie默认浏览器关闭时就过期,设置过期时间之后,等到指定日期之后过期</td>\n<td align=\"center\">localStorage除非主动删除数据，否则数据永远不会消失</td>\n<td>session 引入了一个“浏览器窗口”的概念,只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录下)另一个页面，数据依然存在</td>\n</tr>\n<tr>\n<td>服务器请求</td>\n<td align=\"center\">cookie会随着请求传递到服务器,优点:携带数据 缺点:无用数据太多的话影响请求和响应的速度</td>\n<td align=\"center\">只存在客户端,不与服务器(后端)进行交互通信</td>\n<td>只存在客户端,不与服务器(后端)进行交互通信</td>\n</tr>\n<tr>\n<td>应用场景</td>\n<td align=\"center\">1.标识用户身份                              2.长时间存储一些数据</td>\n<td align=\"center\">常用于长期登录（+判断用户是否已登录token），适合长期保存在本地的数据</td>\n<td>敏感账号一次性登录</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h1><h2 id=\"什么是Cookie\"><a href=\"#什么是Cookie\" class=\"headerlink\" title=\"什么是Cookie\"></a>什么是Cookie</h2><p>Cookie又叫会话跟踪技术，实际上就是客户端硬盘上的一个文本文件，该文件用来存储一些数据。</p>\n<p>cookie 是浏览器 为了 标识用户身份  或者 长时间存储一些信息  而保存在用户本地的数据(其本质是 为了提升用户体验  而存储来用户本地的数据)</p>\n<p><strong>Cookie和变量一样，是用来做数据存储的</strong></p>\n<p>与变量不同之处在于，cookie能够有前提性的，实现跨页面读写数据，和长时间保存数据。</p>\n<p>前提性：</p>\n<ul>\n<li>必须是同一个浏览器创建的cookie </li>\n<li>必须是同一个网站创建的cookie</li>\n<li>通过设置path属性所具备的读写权限</li>\n<li>通过设置expires属性所具备的有效时间权限</li>\n</ul>\n<p>特征:</p>\n<ul>\n<li>cookie 的存取都依赖于 document.cookie   (类型  字符串类型)</li>\n<li>cookie 存储的时候是一条一条的的存的</li>\n<li>cookie 可以设置存储路径  和  过期时间(默认浏览器关闭 过期)</li>\n</ul>\n<h2 id=\"如何操作Cookie（重点）\"><a href=\"#如何操作Cookie（重点）\" class=\"headerlink\" title=\"如何操作Cookie（重点）\"></a>如何操作Cookie（重点）</h2><p><strong>Cookie需要依赖服务器环境，所以应先搭建服务器环境。</strong></p>\n<ol>\n<li>创建cookie的语法：</li>\n</ol>\n<p>  a. cookie 的存取都依赖于 document.cookie </p>\n<p>  b. cookie是以键值对(key&#x3D;value)形式存在的字符串</p>\n<p>  c. cookie 存储的时候是一条一条的的存的 (每条数据之前用”; “ 分隔)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;名称=值&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>2.获取cookie的语法：</p>\n<p>  a. cookie 的获取也依赖于 document.cookie</p>\n<p>  b. 获取cookie数据时需要进行数据分割(字符串拆分)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>cookie的修改</li>\n</ol>\n<p>a.  cookie修改 是根据键名(key) 修改对应的值(重新根据键名赋值即可)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;user=hello cookie&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>4 . cookie的删除和过期时间有关</p>\n<p>  a. 默认情况下 如果不设置过期时间 浏览器关闭后 cookie过期</p>\n<p>  b. 如果设置了过期时间 等到时间到期之后 cookie就消失了</p>\n<p>  c. 删除cookie其实本质就是 将过期时间修改为 过去的时间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var date = new Date();</span><br><span class=\"line\">  date.setDate(date.getDate() - 1);// 一天前过期</span><br><span class=\"line\">  document.cookie = &quot;user=helloCookie;expires=&quot; + date.toUTCString();</span><br><span class=\"line\">  document.cookie = &quot;pwd=123123;expires=&quot; + date.toUTCString()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Cookie的常用属性（重点）\"><a href=\"#Cookie的常用属性（重点）\" class=\"headerlink\" title=\"Cookie的常用属性（重点）\"></a>Cookie的常用属性（重点）</h2><h3 id=\"过期时间：expires\"><a href=\"#过期时间：expires\" class=\"headerlink\" title=\"过期时间：expires\"></a>过期时间：expires</h3><p>没有设置expires属性，那么表示该cookie的有效期为会话，会话指浏览器打开到关闭。</p>\n<p>设置了expires属性，那么表示该cookie的有效期为一个具体的时间，过期cookie文件删除。</p>\n<p>示例：\t</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var d = new Date();</span><br><span class=\"line\">d.setDate( d.getDate()+1 );</span><br><span class=\"line\">document.cookie = &quot;username=zhangsan; expires=&quot;+d.toUTCString(); \t</span><br></pre></td></tr></table></figure>\n\n<p>解读：</p>\n<p>创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，它的过期时间是创建这个cookie时的1天后。</p>\n<p>备注：</p>\n<p>通过修改相同命名的cookie的值或过期时间，可以实现该cookie的修改和删除。</p>\n<h3 id=\"路径：path\"><a href=\"#路径：path\" class=\"headerlink\" title=\"路径：path\"></a>路径：path</h3><p>cookie在读取时，是存在访问权限的，即只能够访问path路径下的cookie</p>\n<p>例如，在网站根目录创建的cookie，网站任何位置都能够访问到这个cookie</p>\n<p>在 &#x2F;a&#x2F; 目录下创建的cookie，只能在 &#x2F;a&#x2F; 目录下访问这个cookie。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.cookie = &quot;username=zhangsan; path=/&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>解读：</p>\n<p>创建了一个名称叫做username的cookie，它所存储的内容为zhangsan，该cookie在当前网站下任何位置都能读写。</p>\n<p>备注：</p>\n<p>path和domain属性都是设置该cookie的归属，即cookie作用域，因同源策略的限制，只能够获取同源同作用域下的cookie。</p>\n<h2 id=\"使用Cookie时需要注意\"><a href=\"#使用Cookie时需要注意\" class=\"headerlink\" title=\"使用Cookie时需要注意\"></a>使用Cookie时需要注意</h2><ul>\n<li>有些浏览器在使用中文时，会出现乱码。</li>\n</ul>\n<blockquote>\n<p>在设置cookie时，通过encodeURIComponent 编码，在获取cookie时，通过decodeURIComponent 解码</p>\n</blockquote>\n<ul>\n<li>cookie 文件存放在客户端</li>\n</ul>\n<blockquote>\n<p>cookie 即可以用客户端 javascript 读写，也可以用服务器端 php、jsp等读写。</p>\n</blockquote>\n<ul>\n<li>每个网站只能访问自己网站的cookie</li>\n</ul>\n<blockquote>\n<p>即百度创建的cookie，新浪是不能够访问的。</p>\n</blockquote>\n<ul>\n<li>每个浏览器只能访问自己浏览器的cookie</li>\n</ul>\n<blockquote>\n<p>即火狐创建的cookie，谷歌是不能够访问的。</p>\n</blockquote>\n<ul>\n<li><p>cookie 的内容是纯文本，即只能保存字符串数据。</p>\n</li>\n<li><p>cookie 依赖于服务器环境 ，即设置和获取cookie时，要用 http 访问网页。火狐除外。</p>\n</li>\n</ul>\n<h2 id=\"浏览器Cookie数量及大小限制\"><a href=\"#浏览器Cookie数量及大小限制\" class=\"headerlink\" title=\"浏览器Cookie数量及大小限制\"></a>浏览器Cookie数量及大小限制</h2><h3 id=\"浏览器允许每个域名所包含的cookie数\"><a href=\"#浏览器允许每个域名所包含的cookie数\" class=\"headerlink\" title=\"浏览器允许每个域名所包含的cookie数\"></a>浏览器允许每个域名所包含的cookie数</h3><ul>\n<li><p>Microsoft指出InternetExplorer8增加cookie限制为每个域名50个，但实际上IE6就已经最多允许每个域名50个cookie。</p>\n</li>\n<li><p>Firefox每个域名cookie限制为50个。firefox 3.6可以存150个cookie。</p>\n</li>\n<li><p>Opera每个域名cookie限制为30个。</p>\n</li>\n<li><p>Safari &#x2F; WebKit没有cookie限制。但是如果cookie很多，则会使header大小超过服务器的处理的限制，会导致错误发生。</p>\n</li>\n</ul>\n<h3 id=\"cookie的缺点\"><a href=\"#cookie的缺点\" class=\"headerlink\" title=\"cookie的缺点\"></a>cookie的缺点</h3><p>cookie的缺点主要集中于安全性和隐私保护</p>\n<ol>\n<li>cookie可能被禁用</li>\n<li>cookie不能跨浏览器 &#x2F; 不能跨网站</li>\n<li>cookie可能被删除</li>\n<li>cookie安全性不够高</li>\n<li>在浏览器向服务器发送请求时  cookie会随着请求(请求可以携带一定的数据)一同发送给服务器, 会影响请求和响应的速率  </li>\n<li>cookie 存储大小之后 4k ,  cookie的存储条数 一般为50条</li>\n</ol>\n<h1 id=\"webStorage-拓展\"><a href=\"#webStorage-拓展\" class=\"headerlink\" title=\"webStorage(拓展)\"></a>webStorage(拓展)</h1><h2 id=\"什么是WebStorage\"><a href=\"#什么是WebStorage\" class=\"headerlink\" title=\"什么是WebStorage?\"></a>什么是WebStorage?</h2><p>WebStorage的目的是克服由cookie所带来的一些限制，当数据需要被严格控制在客户端时，不需要持续的将数据发回服务器。</p>\n<h2 id=\"WebStorage两个主要目标：\"><a href=\"#WebStorage两个主要目标：\" class=\"headerlink\" title=\"WebStorage两个主要目标：\"></a>WebStorage两个主要目标：</h2><p>1.提供一种在cookie之外存储会话数据的路径  (一种新的在用户本地 存储数据的方式)<br>2.提供一种存储大量可以跨会话存在的数据的机制  (webStorage也可以跨页面访问 )<br>HTML5的WebStorage提供了两种API：localStorage（本地存储）和sessionStorage（会话存储）</p>\n<h3 id=\"localStorage和sessionStorage的区别-和-共同点\"><a href=\"#localStorage和sessionStorage的区别-和-共同点\" class=\"headerlink\" title=\"localStorage和sessionStorage的区别 和 共同点\"></a>localStorage和sessionStorage的区别 和 共同点</h3><p>1.生命周期</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage的生命周期是永久的，关闭页面或浏览器之后localStorage中的数据也不会消失。</span><br><span class=\"line\">localStorage除非主动删除数据，否则数据永远不会消失。</span><br><span class=\"line\">sessionStorage的生命周期是仅在当前会话下有效,关闭会话窗口就失效了。 (同网站,同窗口)</span><br><span class=\"line\">sessionStorage引入了一个“浏览器窗口会话”的概念，sessionStorage是在同源(同一个域名下)的窗口中始终存在的数据。</span><br><span class=\"line\">只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录/相同的网站)另一个页面，数据依然存在。</span><br><span class=\"line\">但是sessionStorage在关闭了浏览器窗口后就会被销毁。同时独立的打开新的窗口但是同一个页面，sessionStorage也是不一样的。</span><br></pre></td></tr></table></figure>\n\n<p>2.存储大小</p>\n<p>localStorage和sessionStorage的存储数据大小一般都是：5MB</p>\n<p>3.存储位置</p>\n<p>localStorage和sessionStorage都保存在客户端(项目的根目录)，不与后端进行交互通信 (根目录)</p>\n<p>4.存储内容类型</p>\n<p>localStorage和sessionStorage只能存储字符串类型，对于复杂的对象可以使用ECMAScript提供的JSON对象的stringify和parse来处理</p>\n<p>5.获取方式 </p>\n<p>localStorage：window.localStorage<br>sessionStorage：window.sessionStorage</p>\n<p>6.应用场景</p>\n<p>localStorage：常用于长期登录（+判断用户是否已登录），适合长期保存在本地的数据<br>sessionStorage：敏感账号一次性登录</p>\n<h3 id=\"WebStorage的优点-对比cookie\"><a href=\"#WebStorage的优点-对比cookie\" class=\"headerlink\" title=\"WebStorage的优点(对比cookie)\"></a>WebStorage的优点(对比cookie)</h3><p>（1）存储空间更大：cookie为4KB，而WebStorage是5MB</p>\n<p>（2）节省网络流量：WebStorage不会传送到服务器，存储在本地的数据可以直接获取，也不会像cookie一样每次请求都会传送到服务器，所以减少了客户端和服务端的交互，节省了网络流量</p>\n<p>（3）对于那种只需要在用户浏览一组页面期间保存而关闭浏览器后就可以丢弃的数据，sessionStorage会非常方便</p>\n<p>（4）快速显示：有的数据存储在WebStorage上再加上浏览器本身的缓存。获取数据时可以从本地获取会比从服务器端获取快得多，所以速度更快</p>\n<p>（5）安全性：WebStorage不会随着HTTP header发送到服务器端，所以安全性相对于cookie来说会比较高一些，不会担心截获，但是仍然存在伪造问题</p>\n<p>（6）WebStorage提供了一些方法，数据操作比cookie方便</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   length   保存数据的数量</span><br><span class=\"line\">setItem(key, value) —— 保存数据，以键值对的方式存储信息</span><br><span class=\"line\">getItem(key) —— 获取数据，将键值传入，即可获取到对应的value值</span><br><span class=\"line\">removeItem(key) —— 删除单个数据，根据键值移除对应的信息</span><br><span class=\"line\">clear() —— 删除所有的数据</span><br><span class=\"line\">key(index) —— 获取某个索引的key</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cookie和localStorage-sessionStorage\"><a href=\"#cookie和localStorage-sessionStorage\" class=\"headerlink\" title=\"cookie和localStorage sessionStorage\"></a>cookie和localStorage sessionStorage</h3><p>cookie localStorage sessionStorage的区别</p>\n<table>\n<thead>\n<tr>\n<th>对比</th>\n<th align=\"center\">cookie</th>\n<th align=\"center\">localstorage</th>\n<th>sessionStorage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>获取方式</td>\n<td align=\"center\">document.cookie</td>\n<td align=\"center\">window.localStorage</td>\n<td>window.sessionStorage</td>\n</tr>\n<tr>\n<td>数据类型</td>\n<td align=\"center\">cookie的本质是字符串</td>\n<td align=\"center\">对象</td>\n<td>对象</td>\n</tr>\n<tr>\n<td>存储大小</td>\n<td align=\"center\">4K</td>\n<td align=\"center\">5M</td>\n<td>5M</td>\n</tr>\n<tr>\n<td>存储位置</td>\n<td align=\"center\">cookie默认存在当前文件所在的目录,也可以指定目录</td>\n<td align=\"center\">根目录</td>\n<td>根目录</td>\n</tr>\n<tr>\n<td>生命周期</td>\n<td align=\"center\">cookie默认浏览器关闭时就过期,设置过期时间之后,等到指定日期之后过期</td>\n<td align=\"center\">localStorage除非主动删除数据，否则数据永远不会消失</td>\n<td>session 引入了一个“浏览器窗口”的概念,只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源(同一个服务器目录下)另一个页面，数据依然存在</td>\n</tr>\n<tr>\n<td>服务器请求</td>\n<td align=\"center\">cookie会随着请求传递到服务器,优点:携带数据 缺点:无用数据太多的话影响请求和响应的速度</td>\n<td align=\"center\">只存在客户端,不与服务器(后端)进行交互通信</td>\n<td>只存在客户端,不与服务器(后端)进行交互通信</td>\n</tr>\n<tr>\n<td>应用场景</td>\n<td align=\"center\">1.标识用户身份                              2.长时间存储一些数据</td>\n<td align=\"center\">常用于长期登录（+判断用户是否已登录token），适合长期保存在本地的数据</td>\n<td>敏感账号一次性登录</td>\n</tr>\n</tbody></table>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy 111\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy 111\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-07-06T11:16:03.349Z","updated":"2022-07-06T11:32:00.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5aemkdx0001jsu364kk3su2","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy 111</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy 111</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}